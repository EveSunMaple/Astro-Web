---
import { format } from "date-fns";
import { Icon } from "astro-icon/components";

interface Props {
  title: string;
  description?: string;
  date: Date;
  categories?: string[];
  tags?: string[];
  readingTime?: number;
  thumbnail?: string;
  slug: string;
}

const { title, description, date, categories = [], tags = [], readingTime, thumbnail, slug } = Astro.props;
---

<article class="blog-card group animate-fade-in" style={`--delay: ${Math.random() * 0.5}s`}>
  <div
    class="card bg-base-200/40 backdrop-blur-sm hover:bg-base-200/60 transition-all duration-300 overflow-hidden min-w-[280px] h-full"
  >
    <div transition:name=`image-${slug}` class="relative">
      {
        thumbnail && (
          <a href={`/blog/${slug}`} class="block">
            <div class="aspect-video overflow-hidden">
              <img
                src={thumbnail}
                alt={title}
                class="w-full h-full object-cover transform transition-transform duration-300 group-hover:scale-105"
                width="800"
                height="400"
              />
            </div>
          </a>
        )
      }
    </div>

    <div class="card-body">
      <h2
        class="card-title text-xl font-bold line-clamp-2 hover:text-primary transition-colors"
        transition:name=`title-${slug}`
      >
        <a href={`/blog/${slug}`}>{title}</a>
      </h2>

      {description && <p class="text-base-content/80 line-clamp-3 mt-2">{description}</p>}

      <div class="card-meta mt-4 space-y-3">
        <div class="flex items-center gap-2 text-sm text-base-content/70">
          <time datetime={date.toISOString()}>
            <Icon name="lucide:calendar" class="h-4 w-4 inline-block mr-1" />
            {format(date, "MMMM d, yyyy")}
          </time>
          {
            readingTime && (
              <span class="reading-time">
                <Icon name="lucide:clock" class="h-4 w-4 inline-block mr-1" />
                {readingTime} min read
              </span>
            )
          }
        </div>

        <div class="flex flex-wrap gap-2">
          {
            categories.map((category) => (
              <a
                href={`/category/${category.toLowerCase()}`}
                class="badge badge-neutral gap-1 hover:scale-105 transition-transform duration-200"
              >
                <Icon name="lucide:folder" class="h-4 w-4" />
                {category}
              </a>
            ))
          }
          {
            tags.map((tag) => (
              <a
                href={`/tag/${tag.toLowerCase()}`}
                class="badge badge-outline gap-1 hover:scale-105 transition-transform duration-200"
              >
                <Icon name="lucide:tag" class="h-4 w-4" />
                {tag}
              </a>
            ))
          }
        </div>
      </div>

      <div class="card-actions justify-end mt-4">
        <a href={`/blog/${slug}`} class="btn btn-ghost btn-sm transition-colors">
          Read More
          <Icon name="lucide:arrow-right" class="h-4 w-4 transition-transform group-hover:translate-x-1" />
        </a>
      </div>
    </div>
  </div>
</article>

<style>
  .blog-card {
    opacity: 0;
    animation: fadeIn 0.5s ease-out forwards;
    animation-delay: var(--delay);
  }

  @keyframes fadeIn {
    from {
      opacity: 0;
      transform: translateY(20px);
    }
    to {
      opacity: 1;
      transform: translateY(0);
    }
  }
</style>
