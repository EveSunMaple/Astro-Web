---
import dayjs from "dayjs";
import { Icon } from "astro-icon/components";
import CardHorizontal from "../layouts/CardHorizontal.astro";
import type { EnvelopeInfo } from "../types";
import { DATE_FORMAT } from "../consts";
import { t } from "i18next";

const {
  title,
  desc,
  image,
  pubDate,
  badge,
  categories = [],
  tags = [],
  word,
  time,
  url,
} = Astro.props as EnvelopeInfo;

const displayDate = pubDate ? dayjs(pubDate).format(DATE_FORMAT) : null;
---

<CardHorizontal title={title} image={image} url={url}>
  <div class="relative w-full flex flex-col justify-between group">
    <div
      class="flex justify-between items-center mb-4 text-xs sm:text-sm opacity-75"
    >
      <div class="flex flex-wrap items-center gap-2">
        {
          displayDate && (
            <span class="flex items-center gap-1">
              <Icon name="ri:calendar-line" class="h-4 w-4" />
              {displayDate}
            </span>
          )
        }
        {
          badge && (
            <span class="flex flex-wrap items-center gap-1">
              <Icon name="ri:bookmark-2-line" class="h-4 w-4" />
              {badge}
            </span>
          )
        }
      </div>

      <div class="flex flex-wrap items-center gap-1">
        <Icon name="ri:book-open-line" class="h-4 w-4" />
        <span>{word} {t("label.wordCount")} Â· {time} {t("label.readTime")}</span
        >
      </div>
    </div>

    <a
      href={url}
      class="block hover:-translate-y-0.5 transition-transform duration-300"
    >
      <h1
        id={title}
        class="text-3xl leading-normal pt-0 font-bold text-base-content bg-clip-text bg-gradient-to-r from-primary to-secondary transition-colors duration-300 hover:text-transparent"
      >
        {title}
      </h1>
    </a>

    <p class="mt-3 text-base-content/80 line-clamp-2">
      {desc}
    </p>

    <div class="mt-4">
      <div class="flex flex-wrap items-center gap-2">
        {
          categories.map((category) => (
            <a
              href={`/blog/categories/${category}`}
              class="btn btn-xs btn-category"
            >
              {category}
            </a>
          ))
        }
        {
          tags.map((tag) => (
            <a href={`/blog/tags/${tag}`} class="btn btn-xs btn-tag">
              {tag}
            </a>
          ))
        }
        {
          categories.length === 0 && (
            <span class="btn btn-xs btn-disabled opacity-50">
              {t("label.noCategory")}
            </span>
          )
        }
        {
          tags.length === 0 && (
            <span class="btn btn-xs btn-disabled opacity-50">
              {t("label.noTag")}
            </span>
          )
        }
      </div>
    </div>
  </div>
</CardHorizontal>
