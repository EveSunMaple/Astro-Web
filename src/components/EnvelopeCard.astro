---
import dayjs from "dayjs";
import CardHorizontal from "../layouts/CardHorizontal.astro";
import type { EnvelopeInfo } from "../types";
import { t } from "i18next";
const {
  title,
  desc,
  image,
  pubDate,
  badge,
  categories,
  tags,
  word,
  time,
  url,
} = Astro.props as EnvelopeInfo;
const displayDate = dayjs(pubDate).format("ddd MMM DD YYYY");
const hasTategories = categories && categories.length > 0;
const hasTags = tags && tags.length > 0;
const target = "_self";
---

<CardHorizontal title={title} image={image} url={url}>
  <div class="relative w-full p-6 flex flex-col justify-between">
    <a href={url} target={target}>
      <h1 id={title} class="text-4xl m-0 p-2">
        {title}
      </h1>
    </a>
    <div class="m-2">{desc}</div>
    <div class="m-2 w-full">
      <div class="flex w-full items-center justify-between">
        <div class="flex w-full items-center gap-2 flex-wrap">
          {displayDate && <div class="badge badge-neutral">{displayDate}</div>}
          {badge && <div class="badge badge-primary">{badge}</div>}
        </div>
        {
          time && (
            <div class="badge  whitespace-nowrap">{`${time} ${t("label.readTime")}`}</div>
          )
        }
      </div>
      <div class="flex items-center justify-between mt-2">
        <div class="flex items-center gap-2 flex-wrap">
          {
            hasTategories ? (
              categories.map((categoroy) => (
                <>
                  <a
                    href={`/blog/categories/${categoroy}`}
                    class="btn btn-xs btn-accent"
                  >
                    {categoroy}
                  </a>
                </>
              ))
            ) : (
              <div class="btn btn-xs btn-secondary btn-disabled rounded-full">
                {t("label.noCategory")}
              </div>
            )
          }
          {
            hasTags ? (
              tags.map((tag) => (
                <>
                  <a
                    href={`/blog/tags/${tag}`}
                    class="btn btn-xs btn-secondary"
                  >
                    {tag}
                  </a>
                </>
              ))
            ) : (
              <div class="btn btn-xs btn-secondary btn-disabled">
                {t("label.noTag")}
              </div>
            )
          }
        </div>
        {
          word && (
            <div class="badge whitespace-nowrap">{`${word} ${t("label.wordCount")}`}</div>
          )
        }
      </div>
    </div>
  </div>
</CardHorizontal>
