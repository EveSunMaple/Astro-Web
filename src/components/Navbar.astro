---
import { Icon } from "astro-icon/components";
import Menu from "../components/NavbarMenu.astro";
import ThemeButton from "../widget/ThemeButton.astro";
import { SITE_TITLE } from "../consts";
---

<navbar
  class="navbar fixed px-2 w-full transform transition-transform delay-300 duration-500 ease-in-out text-center z-50 bg-base-100 shadow-lg md:hidden"
  id="navbar"
>
  <div class="navbar-start">
    <label class="btn btn-ghost swap swap-rotate">
      <input type="checkbox" id="menu-toggle" />
      <Icon name="mdi:menu" class="swap-off w-8 h-8" />
      <Icon name="mdi:close" class="swap-on w-8 h-8" />
    </label>
  </div>

  <div class="navbar-center">
    <a
      class="btn btn-ghost text-xl hover:scale-105 transition-transform duration-300"
      href="/"
    >
      {SITE_TITLE}
    </a>
  </div>

  <div class="navbar-end">
    <ThemeButton id="navbar-theme" className="w-auto" />
  </div>

  <div
    id="header-menu"
    class="absolute top-full left-0 w-full transform -translate-x-full transition-transform duration-300 ease-in-out"
  >
    <Menu />
  </div>
</navbar>

<style>
  #header-menu.show {
    opacity: 1;
    transform: scale(1);
  }
</style>

<script>
  let lastScrollY = window.scrollY;
  const navbar = document.getElementById("navbar") as HTMLElement;
  const headerMenu = document.getElementById("header-menu") as HTMLElement;
  const menuToggle = document.getElementById("menu-toggle") as HTMLInputElement;

  // Toggle menu visibility
  menuToggle?.addEventListener("change", () => {
    if (headerMenu) {
      if (menuToggle.checked) {
        headerMenu.classList.add("show");
      } else {
        headerMenu.classList.remove("show");
      }
    }
  });

  const handleScroll = () => {
    if (navbar) {
      if (window.scrollY > lastScrollY && window.scrollY > 50) {
        navbar.classList.add("-translate-y-full", "duration-500");
        navbar.classList.remove("translate-y-0");

        // Close menu when hiding navbar
        if (menuToggle) {
          menuToggle.checked = false;
        }
        if (headerMenu) {
          headerMenu.classList.remove("show");
        }
      } else if (window.scrollY < lastScrollY) {
        navbar.classList.remove("-translate-y-full");
        navbar.classList.add("translate-y-0", "duration-300");
      }

      lastScrollY = window.scrollY;
    }
  };

  // Throttle scroll event for better performance
  let ticking = false;
  window.addEventListener("scroll", () => {
    if (!ticking) {
      window.requestAnimationFrame(() => {
        handleScroll();
        ticking = false;
      });
      ticking = true;
    }
  });

  // Close menu when clicking outside
  document.addEventListener("click", (event) => {
    const target = event.target as Node;
    if (!navbar?.contains(target) && headerMenu?.classList.contains("show")) {
      menuToggle.checked = false;
      headerMenu.classList.remove("show");
    }
  });

  // Close menu when clicking menu items
  const menuItems = document.querySelectorAll("#header-menu a");
  menuItems.forEach((item) => {
    item.addEventListener("click", () => {
      menuToggle.checked = false;
      headerMenu?.classList.remove("show");
    });
  });
</script>
