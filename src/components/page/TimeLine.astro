---
interface TimelineItem {
  year: string;
  event: string;
}

interface Props {
  items: TimelineItem[];
}

const { items } = Astro.props;
---

<ul class="timeline timeline-vertical m-0 p-0">
  {
    items.map((item, index) => (
      <li>{index !== 0 && <hr class="bg-neutral-content" />}
        {index % 2 === 0 ? (
        <div class="timeline-start"><time class="font-mono italic">{item.year}</time></div>
        <div class="timeline-middle">
          <svg
            xmlns="http://www.w3.org/2000/svg"
            viewBox="0 0 20 20"
            fill="currentColor"
            class="h-5 w-5"
          >
            <path
              fill-rule="evenodd"
              d="M10 18a8 8 0 100-16 8 8 0 000 16zm3.857-9.809a.75.75 0 00-1.214-.882l-3.483 4.79-1.88-1.88a.75.75 0 10-1.06 1.061l2.5 2.5a.75.75 0 001.137-.089l4-5.5z"
              clip-rule="evenodd"
            />
          </svg>
        </div>
        <div class="timeline-end timeline-box">{item.event}</div>
        ):(<div class="timeline-start timeline-box">{item.event}</div>
        <div class="timeline-middle">
          <svg
            xmlns="http://www.w3.org/2000/svg"
            viewBox="0 0 20 20"
            fill="currentColor"
            class="h-5 w-5"
          >
            <path
              fill-rule="evenodd"
              d="M10 18a8 8 0 100-16 8 8 0 000 16zm3.857-9.809a.75.75 0 00-1.214-.882l-3.483 4.79-1.88-1.88a.75.75 0 10-1.06 1.061l2.5 2.5a.75.75 0 001.137-.089l4-5.5z"
              clip-rule="evenodd"
            />
          </svg>
        </div>
        <div class="timeline-end"><time class="font-mono italic">{item.year}</time></div>)}
        <hr class="bg-neutral-content" />
      </li>
    ))
  }
</ul>
