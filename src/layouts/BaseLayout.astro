---
import "medium-zoom/dist/style.css";
import "/node_modules/katex/dist/katex.min.css";
import Profile from "../components/ProfileCard.astro";
import BaseHead from "../components/BaseHead.astro";
import Navbar from "../components/Navbar.astro";
import Footer from "../components/Footer.astro";
import TagCard from "../components/TagCard.astro";
import CategoryCard from "../components/CategoryCard.astro";
import ToolCard from "../components/ToolCard.astro";
import {
  SITE_LANG,
  SITE_TAB,
  SITE_TITLE,
  SITE_DESCRIPTION,
  DAISYUI_THEME,
} from "../consts";
import i18next, { changeLanguage } from "i18next";
changeLanguage(SITE_LANG);
const { title, image } = Astro.props;
---

<!doctype html>
<html
  lang={i18next.language}
  class="bg-base-300"
  data-theme="winter"
  data-theme-type="light"
>
  <head>
    <meta charset="UTF-8" />
    <title class="sr-only">{`${title} - ${SITE_TAB}`}</title>
    <script
      defer
      src="https://cloud.umami.is/script.js"
      data-website-id="e72a173b-34d3-468f-9cb5-cfdbd1cc2c0a"></script>
    <script
      data-light={DAISYUI_THEME.light}
      data-dark={DAISYUI_THEME.dark}
      is:inline
    >
      (function () {
        let storedTheme = localStorage.getItem("theme");
        const userPreferredTheme = window.matchMedia(
          "(prefers-color-scheme: dark)",
        ).matches
          ? "light"
          : "dark";

        const scriptElement = document.querySelector(
          "script[data-light][data-dark]",
        );

        const light = scriptElement?.dataset.light;
        const dark = scriptElement?.dataset.dark;

        if (storedTheme !== "light" && storedTheme !== "dark") {
          storedTheme = "light";
          localStorage.setItem("theme", storedTheme);
        }
        const theme = storedTheme || userPreferredTheme;
        const currentTheme = theme === "light" ? light : dark;

        document.documentElement.setAttribute("data-theme-type", theme);
        document.documentElement.setAttribute("data-theme", currentTheme);
      })();
    </script>
    <BaseHead title={SITE_TITLE} description={SITE_DESCRIPTION} image={image} />
  </head>

  <body>
    <section
      id="theme"
      data-light={DAISYUI_THEME.light}
      data-dark={DAISYUI_THEME.dark}
      data-theme="light"
    >
    </section>
    <Navbar title={SITE_TITLE} />
    <div class="max-w-6xl m-auto">
      <div
        class="relative grid gap-4 p-0 lg:p-4 md:grid-cols-5 lg:grid-cols-4 top-20 md:top-0 text-base lg:text-lg"
      >
        <!-- Sidebar Section -->
        <div class="md:col-span-1 top-4 p-2 hidden md:block order-2 md:order-1">
          <Profile />
          <CategoryCard />
          <TagCard />
          <ToolCard />
        </div>

        <!-- Main Content Section -->
        <div
          class="col-span-3 md:col-span-4 lg:col-span-3 p-2 order-1 md:order-2"
        >
          <main id="swup" class="detail transition-main">
            <div class="grid gap-8 fade-in-up">
              <slot />
              <Footer />
            </div>
          </main>
        </div>
      </div>
    </div>
  </body>
</html>
<script>
  function addCopyButton() {
    const copyButtons = document.querySelectorAll(".copy-btn");

    copyButtons.forEach((button) => {
      const copyCheckbox = button.querySelector(
        ".copy-checkbox",
      ) as HTMLInputElement;

      if (copyCheckbox && button instanceof HTMLElement) {
        const codeBlock = button.closest(".highlight")?.querySelector(".code");

        if (codeBlock && codeBlock instanceof HTMLElement) {
          const code = codeBlock.innerText;

          copyCheckbox.addEventListener("change", function () {
            if (copyCheckbox.checked) {
              navigator.clipboard.writeText(code).then(
                function () {
                  copyCheckbox.setAttribute("disabled", "true");
                  button.setAttribute("title", "Copied!");
                  setTimeout(() => {
                    copyCheckbox.removeAttribute("disabled");
                    button.removeAttribute("title");
                    copyCheckbox.checked = false;
                  }, 1500);
                },
                function (err) {
                  console.error("Copy failed:", err);
                },
              );
            }
          });
        } else {
          console.error("codeBlock is null or not an HTMLElement");
        }
      }
    });
  }

  import mediumZoom from "medium-zoom/dist/pure";
  document.addEventListener("swup:page:view", () => {
    mediumZoom(".main-card img:not(.link-card img):not(.comment img)", {
      margin: 24,
      background: "#00000080",
    });
  });

  document.addEventListener("swup:page:view", () => {
    addCopyButton();
    const astroPageLoadEvent = new Event("astro:page-load");
    document.dispatchEvent(astroPageLoadEvent);
  });

  document.addEventListener("DOMContentLoaded", () => {
    const ContentLoadEvent = new Event("swup:page:view");
    document.dispatchEvent(ContentLoadEvent);
  });
</script>
