---
import type { Post, Page } from "../../../../types";
import EnvelopeCard from "../../../../components/EnvelopeCard.astro";
import BaseLayout from "../../../../layouts/BaseLayout.astro";
import BaseCard from "../../../../components/BaseCard.astro";
import { getCollection } from "astro:content";
import { infoTest } from "../../../../consts";

export async function getStaticPaths({ paginate }: { paginate: any }) {
  const all_posts = await getCollection("blog");

  const all_tags = [
    ...new Set(all_posts.flatMap((post) => post.data.tags || [])),
  ];

  all_posts.sort((a, b) => b.data.pubDate.valueOf() - a.data.pubDate.valueOf());
  return all_tags.flatMap((tag) => {
    const filtered_posts = all_posts.filter((post) =>
      post.data.tags?.includes(tag)
    );
    return paginate(filtered_posts, {
      params: { tag },
      pageSize: 8,
    });
  });
}

const { page } = Astro.props as { page: Page };
const params = Astro.params;

function generatePageLinks(totalPages: number): {
  active: string[];
  hidden: string[];
} {
  const pages = {
    active: [] as string[],
    hidden: [] as string[],
  };

  if (totalPages > 3) {
    pages.active.push("1");
    pages.active.push("...");
    pages.active.push(totalPages.toString());
    for (let i = 2; i <= totalPages - 1; i++) {
      pages.hidden.push(i.toString());
    }
  } else {
    for (let i = 1; i <= totalPages; i++) {
      pages.active.push(i.toString());
    }
  }
  return pages;
}

const totalPages = Math.ceil(page.total / page.size);
const pageLinks = generatePageLinks(totalPages);
---

<BaseLayout title="Tag">
  <BaseCard title="Tag">
    <h1 id="h1">{infoTest.tagPage + params.tag}</h1>
    <hr />
  </BaseCard>
  <div class="mt-8 mb-8">
    {
      page.data.map((post: Post) => (
        <EnvelopeCard
          title={post.data.title}
          image={post.data.image}
          desc={post.data.description}
          url={"/blog/" + post.slug}
          pubDate={post.data.pubDate}
          badge={post.data.badge}
          categories={post.data.categories}
          tags={post.data.tags}
          target="_self"
        />
      ))
    }
  </div>
  <div class="flex justify-between mb-8">
    <a
      href={page.url.prev || "'#'"}
      class={page.url.prev
        ? `btn bg-base-100 shadow-xl`
        : `btn btn-disabled bg-base-100 shadow-xl`}
    >
      <svg
        class="h-6 w-6 fill-current md:h-8 md:w-8"
        xmlns="http://www.w3.org/2000/svg"
        width="24"
        height="24"
        viewBox="0 0 24 24"
      >
        <path d="M15.41,16.58L10.83,12L15.41,7.41L14,6L8,12L14,18L15.41,16.58Z"
        ></path>
      </svg>
      <span class="hidden lg:inline"> {infoTest.prevPage}</span>
    </a>
    <div class="join">
      {
        totalPages > 4 ? (
          <>
            {pageLinks.active.map((link) =>
              link === "..." ? (
                <div class="dropdown dropdown-top join-item rounded-none">
                  <div
                    tabindex="0"
                    role="button"
                    class="btn bg-base-100 rounded-none w-[55px]"
                  >
                    ...
                  </div>
                  <ul class="menu dropdown-content bg-base-100 rounded-box z-[100] p-2 shadow-xl">
                    {pageLinks.hidden.map((hidden) => (
                      <li>
                        <a
                          title={hidden}
                          aria-label={hidden}
                          href={
                            hidden === "1"
                              ? `/blog/tag/${params.tag}`
                              : `/blog/tag/${params.tag}/${hidden}`
                          }
                          class={`menu-item bg-base-100 ${hidden === page.current ? "btn-active" : ""}`}
                        >
                          {hidden}
                        </a>
                      </li>
                    ))}
                  </ul>
                </div>
              ) : (
                <a
                  title={link}
                  aria-label={link}
                  href={
                    link === "1"
                      ? `/blog/tag/${params.tag}`
                      : `/blog/tag/${params.tag}/${link}`
                  }
                  class={`join-item btn bg-base-100 ${link === page.current ? "btn-active" : ""}`}
                >
                  {link}
                </a>
              )
            )}
          </>
        ) : (
          pageLinks.active.map((link) => (
            <a
              title={link}
              aria-label={link}
              href={
                link === "1"
                  ? `/blog/tag/${params.tag}`
                  : `/blog/tag/${params.tag}/${link}`
              }
              class={`join-item btn bg-base-100 ${link === page.current ? "btn-active" : ""}`}
            >
              {link}
            </a>
          ))
        )
      }
    </div>
    <a
      href={page.url.next || "'#'"}
      class={page.url.next
        ? `btn bg-base-100 shadow-xl`
        : `btn btn-disabled bg-base-100 shadow-xl`}
    >
      <span class="hidden lg:inline"> {infoTest.nextPage}</span>
      <svg
        class="h-6 w-6 fill-current md:h-8 md:w-8"
        xmlns="http://www.w3.org/2000/svg"
        width="24"
        height="24"
        viewBox="0 0 24 24"
      >
        <path d="M8.59,16.58L13.17,12L8.59,7.41L10,6L16,12L10,18L8.59,16.58Z"
        ></path>
      </svg>
    </a>
  </div>
</BaseLayout>
